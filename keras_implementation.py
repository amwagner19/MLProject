from keras.models import Sequentialfrom keras.layers import Densefrom keras.wrappers.scikit_learn import KerasClassifierfrom sklearn.model_selection import StratifiedKFoldfrom sklearn.model_selection import cross_val_scorefrom sklearn.preprocessing import LabelEncoderfrom sklearn.pipeline import Pipelineimport numpy as npimport pandas as pddef create_model():	model = Sequential()	model.add(Dense(12, input_dim=8, activation='relu'))	model.add(Dense(8, activation='relu'))	model.add(Dense(1, activation='sigmoid'))	model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])	return modeldef separateFeaturesTarget(df):     features=df[['Countries','Number of speakers','Latitude','Longitude']]    target=df[['Degree of endangerment']]    return features, targetdef cleanCountries(arr):    for x in range(0,len(arr)):        if arr[x]=="":            arr[x]=-1    return arrdef cleanNumerics(numSpeak,lat,long):    for x in range(0,len(numSpeak)):        numSpeak[x]=int(numSpeak[x])    for x in range(0,len(lat)):         lat[x]=float(lat[x])    for x in range(0,len(long)):        long[x]=float(long[x])    return numSpeak, lat, longdef cleanTarget(arr):    for x in range (0,len(arr)):         if arr[x]=='Vulnerable':            arr[x]=0        elif arr[x]=='Severely Endangered':            arr[x]=1        elif arr[x]=='Definitely Endangered':            arr[x]=2        elif arr[x]=='Severely Endangered':            arr[x]=3        elif arr[x]=='Extinct':            arr[x]=4def readData():     extinctLanguages=pd.read_csv("extinctLanguages.csv")    extinctLanguages.fillna(0)    extinctLanguageFeatures, extinctLanguageTarget=separateFeaturesTarget(extinctLanguages)    extinctLanguageTarget=cleanTarget(extinctLanguageTarget)    print(extinctLanguageTarget)    readData()    